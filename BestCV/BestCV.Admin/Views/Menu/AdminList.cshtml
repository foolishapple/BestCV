@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_Layout";
    ViewBag.Title = "Menu quản trị";
}
@section Headers{
    <style type="text/css">
        /*
                                                                                                    tree view css
                                                                                                */
        .tree {
            margin: 0;
            padding: 0;
            list-style: none;
        }

            .tree ul {
                margin: 0;
                padding: 0;
                list-style: none;
                margin-left: 1em;
                position: relative;
            }

                .tree ul ul {
                    margin-left: 0.5em;
                }

                .tree ul:before {
                    content: "";
                    display: block;
                    width: 0;
                    position: absolute;
                    top: 0;
                    bottom: 0;
                    left: 0;
                    border-left: 1px solid;
                }

                .tree ul li:before {
                    content: "";
                    display: block;
                    width: 10px;
                    height: 0;
                    border-top: 1px solid;
                    margin-top: -1px;
                    position: absolute;
                    top: 1em;
                    left: 0;
                }

                .tree ul li:last-child:before {
                    background: #fff;
                    height: auto;
                    top: 1em;
                    bottom: 0;
                }

            .tree li {
                margin: 0 0 5px;
                padding: 0 1em;
                line-height: 2.5em;
                color: #b9c7d480;
                font-weight: 500;
                font-size: 14px;
                position: relative;
                cursor: default;
            }

            .tree .branch div {
                display: inline;
            }

            .tree .branch > div .btn {
                display: none;
                border-radius: 50%;
                width: 32px;
                aspect-ratio: 1;
            }

            .tree .branch > div:hover .btn {
                display: inline-block;
            }

            .tree .branch > div .btn i {
                margin: auto;
            }

            .tree .branch > div .btn-admin-edit:hover {
                background: #2ed8b6;
            }

            .tree .branch > div .btn-admin-delete:hover {
                background: #ff5370;
            }

            .tree .branch > div .btn-admin-upper:hover {
                background: #1bf566;
            }

            .tree .branch > div .btn-admin-lower:hover {
                background: #ff5370;
            }

            .tree .branch > div .btn-admin-delete:hover i, .tree li > div .btn-admin-edit:hover i, .tree .branch > div .btn-admin-upper:hover i, .tree li > div .btn-admin-lower:hover i {
                color: #fff;
            }

            .tree li .expand {
                display: block;
            }

            .tree li .collapse {
                display: none;
            }

            .tree li a {
                text-decoration: none;
                color: #369;
            }

            .tree li .name-item {
                cursor: pointer;
                color: #000;
                padding: 0.5rem .75rem;
                vertical-align: middle;
                transition: all 0.2s ease-in;
            }

                .tree li .name-item:hover {
                    color: #fff;
                    background-color: #489dff;
                    border-radius: 5px;
                }

            .tree li span:hover ~ div {
                display: inline;
            }

            .tree li > i {
                cursor: pointer;
                color: #666;
            }

            .tree li button {
                text-decoration: none;
                color: #369;
                border: none;
                background: transparent;
                margin: 0px 0px 0px 0px;
                padding: 0px 0px 0px 0px;
                outline: 0;
            }

                .tree li button:active {
                    text-decoration: none;
                    color: #369;
                    border: none;
                    background: transparent;
                    margin: 0px 0px 0px 0px;
                    padding: 0px 0px 0px 0px;
                    outline: 0;
                }

                .tree li button:focus {
                    text-decoration: none;
                    color: #369;
                    border: none;
                    background: transparent;
                    margin: 0px 0px 0px 0px;
                    padding: 0px 0px 0px 0px;
                    outline: 0;
                }

        .select2-results__option span {
            display: inline-block;
        }

        .btn i {
            padding: 0;
        }

        .btn:not(.btn-outline):not(.btn-dashed):not(.border-hover):not(.border-active):not(.btn-flush):not(.btn-icon) {
            padding: inherit;
        }

        .form-check-label {
            font-weight: 500;
            color: rgb(24, 28, 50);
        }

        .form-check .form-check-input {
            float: left;
            margin-left: 0;
            margin-right: 0.75rem;
        }

        #btnUpdateItem, #modal_courseCategory_cancel {
            padding: calc(0.775rem + 1px) calc(1.5rem + 1px);
        }

        #photoImage {
            object-fit: cover;
            object-position: center;
        }
    </style>
}
<div class="app-toolbar py-3 py-lg-6">
    <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex flex-stack">
        <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
            <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">Quản lý menu trang quản trị</h1>
            <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                <li class="breadcrumb-item text-muted">
                    <a href="@Url.Action("Index","Home")" class="text-muted text-hover-primary">Trang chủ</a>
                </li>
                <li class="breadcrumb-item">
                    <span class="bullet bg-gray-400 w-5px h-2px"></span>
                </li>
                <li class="breadcrumb-item text-muted">Quản lý menu</li>
            </ul>
        </div>
    </div>
</div>
<div class="app-content flex-column-fluid">
    <div class="app-container  container-fluid ">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header border-0 pt-6">
                        <div class="card-toolbar w-100">
                            <div class="d-flex justify-content-end w-100" data-kt-user-table-toolbar="base">
                                <button type="button" class="btn btn-primary btn-sm" onclick="editItem(0)">
                                    <span class="svg-icon svg-icon svg-icon-1 p-0">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path opacity="0.3" d="M11 13H7C6.4 13 6 12.6 6 12C6 11.4 6.4 11 7 11H11V13ZM17 11H13V13H17C17.6 13 18 12.6 18 12C18 11.4 17.6 11 17 11Z" fill="currentColor" />
                                            <path d="M22 12C22 17.5 17.5 22 12 22C6.5 22 2 17.5 2 12C2 6.5 6.5 2 12 2C17.5 2 22 6.5 22 12ZM17 11H13V7C13 6.4 12.6 6 12 6C11.4 6 11 6.4 11 7V11H7C6.4 11 6 11.4 6 12C6 12.6 6.4 13 7 13H11V17C11 17.6 11.4 18 12 18C12.6 18 13 17.6 13 17V13H17C17.6 13 18 12.6 18 12C18 11.4 17.6 11 17 11Z" fill="currentColor" />
                                        </svg>
                                    </span> Thêm mới
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <ul id="tree" class="tree ">
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_courseCategory" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" aria-hidden="true" data-bs-focus="false">
    <div class="modal-dialog modal-dialog-centered mw-650px">
        <div class="modal-content">
            <div>
                <div class="modal-header" id="kt_modal_add_customer_header">
                    <h2 class="fw-bold modal-title">Add a Customer</h2>
                    <div class="btn btn-icon btn-sm btn-active-light-primary ms-2 btn-close" data-bs-dismiss="modal" aria-label="Dong">
                    </div>
                </div>
                <div class="modal-body py-5 px-lg-17">
                    <div class="scroll-y me-n7 pe-7 row" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_modal_add_customer_header" data-kt-scroll-wrappers="#kt_modal_add_customer_scroll" data-kt-scroll-offset="300px" style="max-height: 629px;">

                        <div class="mb-7 fv-plugins-icon-container col-md-12">
                            <label class="required fs-6 fw-semibold mb-2" for="name">Tên</label>
                            <input type="text" class="form-control" placeholder="" id="name" name="name">
                        </div>
                        <div class="mb-7 fv-plugins-icon-container col-md-12">
                            <label class="required fs-6 fw-semibold mb-2" for="capDanhMuc">Cấp menu</label>
                            <select class="form-select " id="capDanhMuc" name="capDanhMuc" data-placeholder="Cấp menu" data-control="select2">
                            </select>
                        </div>

                        <div class="mb-7  fv-plugins-icon-container col-md-12">
                            <label class=" fs-6 fw-semibold mb-2" for="menuIcon">Icon</label>
                            <input type="text" class="form-control" placeholder="Dán svg vào đây" id="menuIcon" name="menuIcon">
                        </div>
                        <div class="mb-7 fv-plugins-icon-container col-md-12">
                            <label class="fs-6 fw-semibold mb-2" for="menuLink">Đường dẫn</label>
                            <input type="text" class="form-control" placeholder="/controller/route" id="menuLink" name="menuLink">
                        </div>
                        @*<div class="mb-7 fv-plugins-icon-container col-md-12">
                            <label class="required fs-6 fw-semibold mb-2" for="danhSachQuyen">Vai trò truy cập</label>
                            <select class="form-select " id="danhSachQuyen" name="danhSachQuyen" data-placeholder="" data-control="select2" multiple="multiple">
                            </select>
                        </div>*@
                        <div class="mb-7 col-md-12 fv-plugins-icon-container">
                            <label class="fw-semibold fs-6 mb-2">Vai trò truy cập</label>
                            <select class="form-select" id="selectRole" multiple="multiple" data-control="select2" data-placeholder="">
                            </select>
                        </div>

                        <div class="mb-7 fv-plugins-icon-container col-md-12">
                            <label class=" fs-6 fw-semibold mb-2" for="createdTime">Ngày tạo</label>
                            <input type="text" class="form-control" readonly placeholder="" disabled id="createdTime" name="createdTime">
                        </div>

                    </div>
                </div>
                <div class="modal-footer flex-center">
                    <button data-bs-dismiss="modal" aria-label="Huy" id="modal_courseCategory_cancel" class="btn btn-secondary me-3">
                        Hủy
                    </button>
                    <button id="btnUpdateItem" class="btn btn-primary">
                        <span class="indicator-label">
                            Lưu
                        </span>
                        <span class="indicator-progress">
                            Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                        </span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        var dataSource = [];
        var roleSource =[];
        var table, updatingObj;
        var tableUpdating = 0, updatingItemId = 0;
        var swal2deleteClass = {
            confirmButton: 'swal_btn_danger',
        }
        $(document).ready(function () {
            loadMenuAdmin();
            loadDataSelectParent();
            loadRole();
            //loadOrderSort(10);
            //loadDataSelectRoles();
            $("#selectRole").select2({
                allowClear: true
            })
        });

        $("#btnUpdateItem").click(function () {
            validateData(updatingItemId);
        })

        async function getItemById(id) {
            try{
                var result = await httpService.getAsync(`api/menu/detail/${id}`);
                return result.resources;
            }
            catch(e){
                return undefined;
            }
        }

        function validateData(id) {
            var titleName = (id > 0 ? "Cập nhật menu" : "Thêm mới menu");
            var listErr = [];
            if ($("#name").val().length == 0) {
                listErr.push("Tên không được để trống");
            }
            if ($("#name").val().length >255 ) {
                listErr.push("Tên không được lớn hơn 255 ký tự ");
            }
            if (listErr.length > 0) {
                var contentError = "<ul>";
                listErr.forEach(function (item, index) {
                    contentError += "<li class='text-start mb-2'>" + item + "</li>";
                })
                contentError += "</ul>";
                var swalSubTitle = "<p class='swal__admin__subtitle mt-2'>" + titleName + " không thành công</p>";
                Swal.fire(
                    'Menu' + swalSubTitle,
                    contentError,
                    'warning'
                );
            }
            else {
                updateItem(updatingItemId);
            }
        }
        function loadMenuAdmin() {
            $.ajax({
                url: systemConfig.defaultAPIURL + "api/menu/list-all-menu-admin",
                type: "GET",
                contentType: "application/json",
                success: function (responseData) {
                    //console.log(responseData);
                    let data = responseData.Resources;
                    dataSource = data;
                    dataSource.forEach(function (item, index) {
                        if (item.ParentId == null || item.ParentId == 0) {
                            var span = `<span class="svg-icon svg-icon-muted svg-icon-1">${item.Icon != null ? item.Icon : ""}</span><span class="name-item edit-item"  data-id="${item.Id}" >${item.Name}</span>`;
                            var actionButtons = "";
                            actionButtons = `<button type="button" class="btn btn-admin-delete" data-id="${item.Id}">
                                                                                                 <i class="fa-regular fa-trash-can text-c-red"></i>
                                                                                        </button>
                                                                                        `;
                            var newRow = `<li class='branch' id='${item.Id}'>
                                                                          <div>${span}${actionButtons}</div>
                                                                          </li>`;
                            $(newRow).appendTo($("#tree"));
                            recursion(item);
                        };
                    });
                    renderTreeView();

                    $(".edit-item").click(function () {
                        editItem(parseInt($(this).attr('data-id')))
                    })
                    $(".btn-admin-delete").click(function () {
                        deleteItem(parseInt($(this).attr('data-id')))
                    })
                },
                error: function (e) {
                    if (e.status === 401) {
                        Swal.fire(
                            'Quản lý menu',
                            'Phiên đăng nhập của bạn đã hết hạn, vui lòng đăng nhập để sử dụng tính năng này.',
                            'error'
                        ).then(function () {
                            window.location.href = "@Url.Action("LoginPage","Home")";
                        });
                    }
                    else if (e.status == 403) {
                        Swal.fire(
                            'Quản lý menu',
                            'Bạn không có quyền sử dụng tính năng này.',
                            'error'
                        );
                    }
                    else {
                        Swal.fire(
                            'Quản lý menu',
                            'Lấy danh sách menu không thành công!',
                            'error'
                        );
                    }
                }
            });
        }

        function renderTreeView() {
            var tree = document.getElementById("tree");
            if (tree) {
                tree.querySelectorAll("ul").forEach(function (ul, key, parent) {
                    var li = ul.parentNode;
                    li.classList.add("branch");
                    var i = document.createElement("i");
                    i.classList.add("indicator", "fas");
                    i.classList.add("fa-chevron-right");
                    li.insertBefore(i, li.firstChild);
                    ul.classList.add("collapse");

                    i.addEventListener("click", function (event) {
                        if (li === event.target || li === event.target.parentNode) {
                            if (ul.classList.contains('collapse')) {
                                ul.classList.add("expand");
                                ul.classList.remove("collapse");
                                i.classList.remove("fa-chevron-right");
                                i.classList.add("fa-chevron-down");
                            } else {
                                ul.classList.add("collapse");
                                ul.classList.remove("expand");
                                i.classList.remove("fa-chevron-down");
                                i.classList.add("fa-chevron-right");
                            }
                        }
                    }, false);
                });
            }
        }

        function recursion(parent_item) {
            var children = dataSource.filter(x => x.ParentId == parent_item.Id);
            if (children.length < 1) {
                return null;
            }
            else {
                // gen ra thẻ ul
                var ul = `<ul id='parent_${parent_item.Id}'></ul>`;
                $('li#' + parent_item.Id + '').append(ul);
                // thực hiện đệ quy với children
                children.forEach(function (item, index) {
                    var span = `<span class="name-item" onclick="editItem(${item.Id})"">${item.Name}</span>`;
                    var actionButtons = "";
                    actionButtons = `<button type="button" class="btn btn-admin-delete" data-id="${item.Id}">
                                                                                                         <i class="fa-regular fa-trash-can text-c-red"></i>
                                                                                                </button>
                                                                                                `;
                    var newRow = `<li class='branch' id='${item.Id}'>
                                                                  <div>${span}${actionButtons}</div>
                                                                  </li>`;
                    $('#parent_' + item.ParentId + '').append(newRow);
                    recursion(item);
                });
            };
        }

        async function editItem(id) {
            updatingItemId = id;
            $("#modal_courseCategory .modal-title").text(id == 0 ? "Thêm mới menu " : "Cập nhật menu");
            let obj = await getItemById(id);
            $("#Id").val(id > 0 ? obj.id : 0);
            $("#name").val(id > 0 ? obj.name : "");
            $("#selectRole").val(id > 0 ? obj.roles : []).trigger("change");
            $("#menuIcon").val(id > 0 ? obj.icon : "");
            $("#menuLink").val(id > 0 ? obj.link : "");
            $("#order").val(id > 0 ? obj.orderSort : "").trigger('change');
            $("#capDanhMuc").val(id > 0 ? obj.parentId : " ").trigger('change');
            $("#createdTime").val(id > 0 ? moment(obj.createdTime).format("DD/MM/YYYY HH:mm:ss") : moment().format("DD/MM/YYYY HH:mm:ss"));
            //$("#danhSachQuyen").val(id > 0 ? obj.listRoleId : "").trigger('change');
            $("#modal_courseCategory").modal('show');
        }

        async function updateItem(id) {
            var titleName = (updatingItemId > 0 ? "Cập nhật menu" : "Thêm mới menu");
            var textName = (updatingItemId > 0 ? "cập nhật" : "thêm mới");
            let obj = await getItemById(id);
            let objName = id > 0 ? obj.name : $("#name").val();
            var updatingObj = {
                "id": updatingItemId,
                "name": $("#name").val(),
                "parentId": $("#capDanhMuc").val(),
                "icon": $("#menuIcon").val(),
                "link": $("#menuLink").val(),
                "menuTypeId": @MenuConstant.DEFAULT_VALUE_MENU_ADMIN,
                "description" : "",
                'roles': $("#selectRole").val()
            };
            Swal.fire({
                title: titleName,
                html: "Bạn có chắc chắn muốn " + textName + " menu <strong>" + objName + "</strong> không?",
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#443',
                cancelButtonText: 'Hủy',
                confirmButtonText: 'Lưu',
                focusConfirm: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    $("#loading").addClass('show');
                    //CALL AJAX TO UPDATE
                    if (id > 0) {
                        $.ajax({
                            url: systemConfig.defaultAPIURL + "api/menu/update",
                            type: "PUT",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                $("#loading").removeClass('show');

                                if (responseData.status == 200) {
                                    Swal.fire({
                                        title: titleName,
                                        html: 'Menu <strong>' + objName + '</strong> được cập nhật thành công!',
                                        icon: 'success'
                                    }).then(function () {
                                        $("#modal_courseCategory").modal('hide');
                                        $('#tree').html('');
                                        loadMenuAdmin();
                                        $("#capDanhMuc").html("");
                                        loadDataSelectParent();
                                        window.location.reload();
                                    });
                                } else if (responseData.status == 400) {
                                    var contentError = "<ul>";
                                    responseData.errors.forEach(function (item, index) {
                                        contentError += "<li class='text-start'>" + item + "</li>";
                                    })
                                    contentError += "</ul>";
                                    var swalSubTitle = "<p class='swal__admin__subtitle'>" + titleName + " không thành công</p>";
                                    Swal.fire(
                                        'Menu' + swalSubTitle,
                                        contentError,
                                        'warning'
                                    );
                                }
                                else if (responseData.status == 403) {
                                    var contentError = "<ul>";
                                    responseData.errors.forEach(function (item, index) {
                                        contentError += "<li class='text-start'>" + item + "</li>";
                                    })
                                    contentError += "</ul>";
                                    var swalSubTitle = "<p class='swal__admin__subtitle'>" + titleName + " không thành công</p>";
                                    Swal.fire(
                                        'Menu' + swalSubTitle,
                                        contentError,
                                        'warning'
                                    );
                                }
                            },
                            error: function (e) {
                                $("#loading").removeClass('show');

                                if (e.status === 401) {
                                    Swal.fire(
                                        'Quản lý menu',
                                        'Phiên đăng nhập của bạn đã hết hạn, vui lòng đăng nhập để sử dụng tính năng này.',
                                        'error'
                                    ).then(function () {
                                        window.location.href = "@Url.Action("LoginPage","Home")";
                                    });
                                }
                                else if (e.status == 403) {
                                    Swal.fire(
                                        'Quản lý menu',
                                        'Bạn không có quyền sử dụng tính năng này.',
                                        'error'
                                    );
                                }
                                else {
                                    Swal.fire({
                                        title: titleName,
                                        html: titleName + ' menu không thành công, vui lòng thử lại sau !',
                                        icon: 'error'
                                    });
                                }
                            }
                        });
                    };

                    //CALL AJAX TO CREATE
                    if (id == 0) {
                        $.ajax({
                            url: systemConfig.defaultAPIURL + "api/menu/add",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                $("#loading").removeClass('show');

                                if (responseData.status == 200) {
                                    Swal.fire({
                                        title: titleName,
                                        html: 'Menu <strong>' + objName + '</strong> được tạo mới thành công!',
                                        icon: 'success'
                                    }).then(function () {
                                        $("#modal_courseCategory").modal('hide');
                                        $('#tree').html('');
                                        loadMenuAdmin();
                                        $("#capDanhMuc").html("");
                                        loadDataSelectParent();
                                        window.location.reload();
                                    });
                                }
                                else if (responseData.status == 403) {
                                    var contentError = "<ul>";
                                    responseData.errors.forEach(function (item, index) {
                                        contentError += "<li class='text-start'>" + item + "</li>";
                                    })
                                    contentError += "</ul>";
                                    var swalSubTitle = "<p class='swal__admin__subtitle'>" + titleName + " không thành công</p>";
                                    Swal.fire(
                                        'Menu ' + swalSubTitle,
                                        contentError,
                                        'warning'
                                    );
                                }
                            },
                            error: function (e) {
                                $("#loading").removeClass('show');

                                if (e.status === 401) {
                                    Swal.fire(
                                        'Quản lý menu',
                                        'Phiên đăng nhập của bạn đã hết hạn, vui lòng đăng nhập để sử dụng tính năng này.',
                                        'error'
                                    ).then(function () {
                                        window.location.href = "@Url.Action("LoginPage","Home")";
                                    });
                                }
                                else if (e.status == 403) {
                                    Swal.fire(
                                        'Quản lý menu',
                                        'Bạn không có quyền sử dụng tính năng này.',
                                        'error'
                                    );
                                }
                                else {
                                    Swal.fire({
                                        title: titleName,
                                        html: titleName + ' menu không thành công, vui lòng thử lại sau !',
                                        icon: 'error'
                                    });
                                }
                            }
                        });
                    }
                }
            })
        }
        async function deleteItem(id) {
            let obj = await getItemById(id);
            //console.log(obj)
            Swal.fire({
                title: 'Xóa?',
                html: "Bạn có chắc chắn muốn xóa menu <br> <strong>" + obj.name + "</strong> không?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                cancelButtonText: 'Hủy',
                confirmButtonText: 'Xóa'
            }).then((result) => {
                if (result.isConfirmed) {
                    //CALL AJAX TO DELETE
                    $("#loading").addClass('show');

                    $.ajax({
                        url: systemConfig.defaultAPIURL + "api/menu/delete?id=" + id,
                        type: "DELETE",
                        contentType: "application/json",
                        success: function (responseData) {
                            $("#loading").removeClass('show');

                            if (responseData.status == 200) {
                                Swal.fire(
                                    'Xóa!',
                                    'Menu <strong> ' + obj.name + '</strong> đã được xóa thành công.',
                                    'success'
                                ).then(function () {
                                    $("#modal_courseCategory").modal('hide');
                                    $('#tree').html('');
                                    loadMenuAdmin();
                                    $("#capDanhMuc").html("");
                                    loadDataSelectParent();
                                    window.location.reload();
                                });
                            }
                        },
                        error: function (e) {
                            $("#loading").removeClass('show');
                            //console.log(e)
                            Swal.fire(                            
                                'Quản lý menu',
                                'Xóa menu không thành công, hãy thử lại sau.',
                                'error'
                            );
                        }
                    });

                }
            })
        }
        // render list
        var dataSelectParent = [];
        function loadDataSelectParent() {
            return $.ajax({
                url: systemConfig.defaultAPIURL + "api/menu/list",
                type: 'GET',
                async: 'true',
                contentType: 'application/json',
                success: function (responseData) {
                    var data = responseData.resources;
                    dataSelectParent = data;
                    data.sort(function (a, b) {//sorting
                        if (a.treeIds < b.treeIds) { return -1; }
                        if (a.treeIds > b.treeIds) { return 1; }
                        return 0;
                    });
                    data.forEach(function (item, index) {
                        var data = {
                            id: item.id,
                            text: item.name
                        };
                        var newOption = new Option(data.text, data.id, false, false);
                        $('#capDanhMuc').append(newOption).trigger('change');
                    });
                    $("#capDanhMuc").select2({
                        dropdownParent: $("#modal_courseCategory"),
                        data: dataSelectParent,
                        templateResult: formatResult,
                        allowClear: true,
                    })
                },
                error: function (e) {
                    if (e.status === 401) {
                        Swal.fire(
                            'Quản lý menu',
                            'Phiên đăng nhập của bạn đã hết hạn, vui lòng đăng nhập để sử dụng tính năng này.',
                            'error'
                        ).then(function () {
                            window.location.href = "@Url.Action("LoginPage","Home")";
                        });
                    }
                    else if (e.status == 403) {
                        Swal.fire(
                            'Quản lý menu',
                            'Bạn không có quyền sử dụng tính năng này.',
                            'error'
                        );
                    }
                    else {
                        Swal.fire(
                            'Quản lý menu',
                            'Lấy danh sách danh mục cha không thành công, hãy thử lại sau.',
                            'error'
                        );
                    }
                }
            });
        }
        function loadOrderSort(count) {
            for (var i = 1; i <= count; i++) {
                var data = {
                    id: i,
                    text: i
                };
                var newOption = new Option(data.text, data.id, false, false);
                $('#order').append(newOption).trigger('change');
            }
            $("#order").select2();
        }

        function formatResult(node) {
            //console.log(node);
            var $result = $(`<span> </span>`);
            if (node.treeIds) {
                var level = node.treeIds.split("_").length - 1;
                $result = $(`<span style="padding-left: ${15 * (level)}px">${node.name}</span>`);
            }
            return $result;
        };

        var dataSelectRoles = [];
        function loadDataSelectRoles() {
            return $.ajax({
                url: "@Url.Action("List","Roles")",
                type: 'GET',
                async: 'true',
                contentType: 'application/json',
                success: function (responseData) {
                    var data = responseData.resources.dataSource;
                    dataSelectRoles = data;
                    data.forEach(function (item, index) {
                        var data = {
                            id: item.id,
                            text: item.name
                        };
                        var newOption = new Option(data.text, data.id, false, false);
                        $('#danhSachQuyen').append(newOption).trigger('change');
                    });
                    $("#danhSachQuyen").select2({
                        allowClear: true,
                    })
                },
                error: function (e) {
                    if (e.status === 401) {
                        Swal.fire(
                            'Quản lý menu',
                            'Phiên đăng nhập của bạn đã hết hạn, vui lòng đăng nhập để sử dụng tính năng này.',
                            'error'
                        ).then(function () {
                            window.location.href = "@Url.Action("LoginPage","Home")";
                        });
                    }
                    else if (e.status == 403) {
                        Swal.fire(
                            'Quản lý menu',
                            'Bạn không có quyền sử dụng tính năng này.',
                            'error'
                        );
                    }
                    else {
                        Swal.fire(
                            'Quản lý menu',
                            'Lấy danh sách vai trò không thành công, hãy thử lại sau.',
                            'error'
                        );
                    }
                }
            });
        }
        async function loadRole() {
            try {
                let result = await httpService.getAsync("api/role/list-all");
                if (result.isSucceeded) {
                    roleSource = result.resources;
                    $('#selectRole').html("").trigger("change");
                    roleSource.forEach(function (item, index) {
                        $('#selectRole').append(new Option(item.name, item.id, false, false)).trigger("change");
                    })
                }
            }
            catch (e) {+
                $('#selectRole').html("").trigger("change");
                console.error(e);
            }
        }
    </script>
}